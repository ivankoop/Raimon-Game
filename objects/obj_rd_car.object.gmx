<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_rd_car</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_start(ph_car_one, 10, path_action_restart, true);

start_animation = false;

start_death = false;

animation_direction = "down";

btimer = 1000;


create_x = x;
create_y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction - 90;


if(start_animation) {
    path_end();
    solid = false;
    depth = - 10;
    
    if(animation_direction == "right") {
        
        if(x &lt; car_test.x + 150) {
            x+= 20;
        } else {
            start_animation = false;
            //aca termina la animacion
        }    
    
    } else if(animation_direction == "left") {
        if(x &gt; car_test.x - 150) {
            x-= 20;
        } else {
            start_animation = false;
        }
    } else if(animation_direction == "up") {
        if(y &gt; car_test.y - 150) {
            y-= 20;
        } else {
            start_animation = false;
        }
    } else if(animation_direction == "down") {
        if(y &lt; car_test.y + 150) {
            y+= 20;
        } else {
            start_animation = false;
        }
    }
    
}

if(start_death) {
    btimer--;
    if(btimer &lt; 0) {
        instance_create(create_x,create_y,obj_rd_car);
        instance_destroy();
    }
}


if(!start_death){
    if(car_test.car_direction == "right") {
        if (place_meeting(x - 20,y,car_test)) {
            start_death = true;
            //show_debug_message(car_test.car_direction);
            audio_play_sound(bomb, 10, false);
            start_animation = true;
            animation_direction = "right";
    
        } 
    }
    
    if(car_test.car_direction == "left") {
        if (place_meeting(x + 20,y,car_test)) {
            start_death = true;
            //show_debug_message(car_test.car_direction);
            audio_play_sound(bomb, 10, false);
            start_animation = true;
            animation_direction = "left";
    
        } 
    }
    
    if(car_test.car_direction == "up") {
        if (place_meeting(x,y + 20,car_test)) {
            start_death = true;
            //show_debug_message(car_test.car_direction);
            audio_play_sound(bomb, 10, false);
            start_animation = true;
            animation_direction = "up";
    
        }
    }
    
    if(car_test.car_direction == "down") {
        if (place_meeting(x,y - 20,car_test)) {
            start_death = true;
            //show_debug_message(car_test.car_direction);
            audio_play_sound(bomb, 10, false);
            start_animation = true;
            animation_direction = "down";
    
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
