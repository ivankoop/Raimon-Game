<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_people_1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.2;

up_direction = true;
down_direction = false;

y_range_down = y + 500;

y_range_up = y - 500;

start_death = false;

start_animation = false;
animation_direction = "left";

btimer = 1000;

create_x = x;
create_y = y;

bullet_hit = 0;


//aca original
walk_speed = 2;

var random_number = round(random(4));
var random_number2 = round(random(2));

if(random_number2 == 1) {
    path_taken = "one";
} else {
    path_taken = "two";
}

go_up = false;
go_down = false;
go_right = false;
go_left = false;


if(random_number &lt;= 1) {
 
    go_up = true;
    go_down = false;
    go_right = false;
    go_left = false;
    
} else if(random_number == 2) {
    
    go_up = false;
    go_down = true;
    go_right = false;
    go_left = false;
    
} else if(random_number == 3) {
    
    go_up = false;
    go_down = false;
    go_right = true;
    go_left = false;
    
} else if(random_number == 4) {
    go_up = false;
    go_down = false;
    go_right = false;
    go_left = true;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> image_angle = direction;

/*if(!start_death) {
    if(up_direction) {
    
    y-= 2;
    show_debug_message("up");
    if(y &lt; y_range_up) {
        down_direction = true;
        up_direction = false;
    }
}

    if(down_direction) {
        y+= 2;
        show_debug_message("down");
        if (y &gt; y_range_down) {
            up_direction = true;
            down_direction = false;
        }   
 
    }
} else {
    x+=10;
    y+= 10;
}*/


if(!start_death) {

    if place_meeting(x + 10, y + 10, obj_bullet) {
        bullet_hit+= 1;
    
    }
    
    if(bullet_hit == 3) {
        start_death = true;
        sprite_index = sp_people_die_down;
        solid = false;
        depth = - 10;
        audio_play_sound(people_kill, 10, false);
        
    }
    
    if(go_up) {
        y-= walk_speed;
        //show_debug_message("GO UP");
        if(place_meeting(x,y - 15,obj_people_colli)){
            go_up = false;
            if(path_taken == "one"){
                go_right = true;
            } else {
                go_left = true;
            }
        
        }
    
    }

    if(go_right) {
        x+= walk_speed;
        //show_debug_message("GO RIGHT");
        image_angle = -90; 
        if(place_meeting(x + 15,y,obj_people_colli)){
            go_right = false;
            if(path_taken == "one") {
                go_down = true;
            } else {
                go_up = true;
            }
        
        
        }
    
    }

    if(go_down) {
        y+= walk_speed;
        image_angle = 180; 
        //show_debug_message("GO DOWN");
        if(place_meeting(x,y + 15,obj_people_colli)){
            go_down = false;
            if(path_taken == "one") {
                go_left = true;
            } else {
                go_right = true;
            }
    
       
        }
    
    }

    if(go_left) {
        x-= walk_speed;
        //show_debug_message("GO LEFT");
        image_angle = 90; 
        if(place_meeting(x - 20,y,obj_people_colli)){
            go_left = false;
        
            if(path_taken == "one") {
                go_up = true;
            } else {
                go_down = true;
            }      

        
        }
    }
    
   

}


if(start_animation) {
    solid = false;
    depth = - 10;
    
    if(animation_direction == "right") {
        
        if(x &lt; car_test.x + 150) {
            x+= 20;
            
        } else {
            //show_debug_message("stop animation");
            start_animation = false;
            sprite_index = sp_people_die_right;
        }
    } else if(animation_direction == "left") {
        if(x &gt; car_test.x - 150) {
            x-= 20;
        } else {
            //show_debug_message("stop animation");
            start_animation = false;
            sprite_index = sp_people_die_left;
        }
    } else if(animation_direction == "up") {
        if(y &gt; car_test.y - 150) {
            y-= 20;
        } else {
            //show_debug_message("stop animation");
            start_animation = false;
            sprite_index = sp_people_die_up;
            
        }
    } else if(animation_direction == "down") {
          
        if(y &lt; car_test.y + 150) {
            y+= 20;
        } else {
            //show_debug_message("stop animation");
            start_animation = false;
            sprite_index = sp_people_die_down;
        }
    
    }
}

if(start_death) {
    btimer--;
    if(btimer &lt; 0) {
        instance_create(create_x,create_y,obj_people_1);
        instance_destroy();
    }
}


if(!start_death){
    if(car_test.car_direction == "right") {
        if (place_meeting(x - 20,y,car_test)) {
            start_death = true;
                audio_play_sound(people_kill, 10, false);
                //show_debug_message(car_test.car_direction);
                start_animation = true;
                animation_direction = "right";
    
        } 
    }
    
    if(car_test.car_direction == "left") {
        if (place_meeting(x + 20,y,car_test)) {
            start_death = true;
            audio_play_sound(people_kill, 10, false);
            //show_debug_message(car_test.car_direction);
            start_animation = true;
            animation_direction = "left";
    
        } 
    }
    
    if(car_test.car_direction == "up") {
        if (place_meeting(x,y + 20,car_test)) {
            start_death = true;
            audio_play_sound(people_kill, 10, false);
            //show_debug_message(car_test.car_direction);
            start_animation = true;
            animation_direction = "up";
    
        }
    }
    
    if(car_test.car_direction == "down") {
        if (place_meeting(x,y - 20,car_test)) {
            start_death = true;
            audio_play_sound(people_kill, 10, false);
            //show_debug_message(car_test.car_direction);
            start_animation = true;
            animation_direction = "down";
    
        }
    }
    
}













</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>15,15</point>
  </PhysicsShapePoints>
</object>
