<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_policia_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkingSpeed = 15;

hp = 100;

car_direction = "quieto";

is_moving = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//player movement
hspeed = walkingSpeed * (keyboard_check(ord('D')) - keyboard_check(ord('A')));
vspeed = walkingSpeed * (keyboard_check(ord('S')) - keyboard_check(ord('W')));


if hspeed != 0 {
    if !place_free(x + hspeed, y){
        
        if hspeed &gt; 0 move_contact_solid(0,hspeed)
        if hspeed &lt; 0 move_contact_solid(180,-hspeed)
        hspeed = 0
    }
}

if vspeed != 0 {
    if !place_free(x+hspeed, y+vspeed) {
        
        if vspeed &gt; 0 move_contact_solid(270,vspeed)
        if vspeed &lt; 0 move_contact_solid(90,-vspeed)
        vspeed = 0
        
    }
}

if place_meeting(x + hspeed, y + vspeed, object41) {
    walkingSpeed = 8;
} else {
    walkingSpeed = 15;
}

if place_meeting(x,y,bullet_police) {
    hp-=10;
}


if keyboard_check(ord('W')){
    image_angle = 0;
    car_direction = "up";
}

if keyboard_check(ord('S')){
    image_angle = 180;
    car_direction = "down";
}

if keyboard_check(ord('D')) {
    image_angle = -90;
    car_direction = "right";
}

if keyboard_check(ord('A')) {
    image_angle = 90;
    car_direction = "left";
}

if keyboard_check(ord('W')) and keyboard_check(ord('D')) {
    image_angle = -45;
    car_direction = "right";
    
}

if keyboard_check(ord('W')) and keyboard_check(ord('A')) {
    image_angle = 45;
    car_direction = "left";
}

if keyboard_check(ord('S')) and keyboard_check(ord('A')) {
    image_angle = 145;
    car_direction = "left";
}

if keyboard_check(ord('S')) and keyboard_check(ord('D')) {
    image_angle = 225;
    car_direction = "right";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
